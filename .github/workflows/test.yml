name: Terraform Provider Tests

on:
  pull_request:
      branches:
        - master
  workflow_call:
    inputs:
      mc_api_key_id:
        description: 'Monte Carlo API Key ID'
        required: true
        type: string
      mc_api_key_token:
        description: 'Monte Carlo API Key Token'
        required: true
        type: string
      bq_service_account:
        description: 'BigQuery Service Account'
        required: true
        type: string
      pg_host:
        description: 'Postgres Host'
        required: true
        type: string
      pg_port:
        description: 'Postgres Port'
        required: true
        type: string
      pg_database:
        description: 'Postgres Database'
        required: true
        type: string
      pg_user:
        description: 'Postgres User'
        required: true
        type: string
      pg_password:
        description: 'Postgres Password'
        required: true
        type: string

permissions:
  # Permission for checking out code
  contents: read

jobs:
  acceptance-tests:
    name: Acceptance Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          cache: true
          go-version-file: 'go.mod'
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.5.*'
          terraform_wrapper: false
      - run:
          go test -v ./... -coverprofile=coverage.out
        env:
          TF_ACC: '1'
          MC_API_KEY_ID: ${{ inputs.mc_api_key_id || secrets.ACC_TEST_MC_API_KEY_ID }}
          MC_API_KEY_TOKEN: ${{ inputs.mc_api_key_token || secrets.ACC_TEST_MC_API_KEY_TOKEN }}
          BQ_SERVICE_ACCOUNT: ${{ inputs.bq_service_account || secrets.ACC_TEST_BQ_SERVICE_ACCOUNT }}
          PG_HOST: ${{ inputs.pg_host || secrets.ACC_TEST_PG_HOST }}
          PG_PORT: ${{ inputs.pg_port || secrets.ACC_TEST_PG_PORT }}
          PG_DATABASE: ${{ inputs.pg_database || secrets.ACC_TEST_PG_DATABASE }}
          PG_USER: ${{ inputs.pg_user || secrets.ACC_TEST_PG_USER }}
          PG_PASSWORD: ${{ inputs.pg_password || secrets.ACC_TEST_PG_PASSWORD }}
      - uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: ./coverage.out
